@model DiscussionsIndexViewModel
@{
    ViewData["Title"] = "Discussions";
}

<div class="row">
    <h1>Discussions</h1>
    <form method="post">
        <div class="col-xs-2 float-xs-left">
            <a class="btn btn-default" asp-controller="Discussions" asp-action="Create">Create new discussion</a>
        </div>
        <div class="col-xs-4 float-xs-right">
            <input asp-for="@Model.FilterInput" placeholder="Discussion title, content or submitter name..." class="form-control" />
        </div>
        <button type="submit" class="btn bt n-default">Filter</button>
    </form>
    <hr />
    @foreach (var item in Model.Discussions)
    {
        <div id="discussion" class="row panel panel-default">
            <div class="col-xs-1 likes">
                <div id="likeContainer">
                    <p>
                        Likes: @item.Likes
                    </p>
                    <form asp-action="LikeUnlikeDiscussion" method="post">
                        <input type="hidden" asp-for="@item.DiscussionId" name="DiscussionId" />
                        <button type="submit" class="btn btn-default">Like</button>
                    </form>
                </div>
            </div>
            <div class="col-xs-11">
                <h1>
                    @if (item.Locked == true)
                    {<span>Locked: </span>}
                    @Html.ActionLink(item.Title, "Single", "Discussions", new { DiscussionId = item.DiscussionId }, null)
                </h1>
                <p>
                    Last activity: @if (!item.Comments.Any())
                    {
                        @item.PostDT
                    }
                    else
                    {
                        @item.Comments.Max(c => c.PostDT)
                    }
                </p>
                <p>
                    Posted by <b>@item.Submitter.Username</b>
                </p>
                <br />
                @if (User.IsInRole("Admin"))
                {
                    <form asp-action="LockUnlockDiscussion" method="post">
                        <input type="hidden" asp-for="@item.DiscussionId" name="DiscussionId" />
                        <button type="submit" class="btn btn-default">
                            @if (item.Locked == false)
                            {
                                <span>Lock discussion</span>
                            }
                            else
                            {
                                <span>Unlock discussion</span>
                            }
                        </button>
                    </form>
                    <br />
                    <form asp-action="DeleteDiscussion" id="deleteForm" method="post">
                        <input type="hidden" asp-for="@item.DiscussionId" name="DiscussionId" />
                        <button type="button" id="btnShowModal" class="btn btn-default" onclick="ShowModal()">Delete discussion</button>
</form>
                }

            </div>
        </div>
    }
</div>

<div class="modal fade" id="confirmModal" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Confirm</h4>
            </div>
            <div class="modal-body">
                <p>The discussion will be permanently deleted.</p>
                <p>Are you sure you want to keep going?</p>
                <button type="submit" form="deleteForm" class="btn btn-primary">Delete</button>
                <button type="button" class="btn btn-default" onclick="HideModal()">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    //$(document).ready(function () {
    //    $("#btnShowModal").click(function () {
    //        $("#confirmModal").modal('show');
    //    });
    //});

    function ShowModal() {
        $("#confirmModal").modal('show');

    };

    function HideModal() {
        $("#confirmModal").modal('hide');

    }
</script>