@model UserGoalsViewModel
@{
    ViewData["Title"] = "My Goals";
}

@{ 
    // Kijkt of er goals zijn waarvan de deadline is verstreken zonder dat ze afgerond zijn.
    foreach (var item in Model.Goals.Where(g => g.Status == GoalStatus.InProgress && g.EndDT < DateTime.Now))
    {
        // Maakt model aan
        var model = new EditGoalViewModel()
        {
            GoalId = item.GoalId,
            UserId = item.UserId,
            Title = item.Title,
            Info = item.Info,
            StartDT = item.StartDT,
            EndDT = item.EndDT,
            Progress = item.Progress,
            Status = item.Status,
            Strikes = item.Strikes
        };

        // Roept een modal popup aan.
        await Html.RenderPartialAsync("IndexPopUp.cshtml", model);
        break;
    }
}
<div class="row">
    @foreach (var item in Model.Goals)
    {
        if (item.Status == GoalStatus.InProgress)
        {
            <div class="goal">
                <div class="progressbarContainer">
                    <div class="progressbar">
                        @if (item.Progress <= 0)
                        {
                            <span style="color: black;">0%</span> 
                        }
                        else
                        {
                            <span>@item.Progress%</span> 
                        }
                        <input class="progress" name="progress" type="hidden" value="@item.Progress">
                    </div>
                </div>
                <div class="infoContainer">
                    <h1>@item.Title</h1>
                    <p>@item.Info</p>
                    <p class="timeContainer">@item.StartDT -- @item.EndDT</p>
                    @if (item.Strikes != 0)
                    {
                        <p>Number of deadline extensions: @item.Strikes</p>
                    }
                </div>
                <div class="optionsContainer">
                    @Html.ActionLink("Edit", "Edit", "Goals", new { Goalid = item.GoalId }, new { @class = "btn btn-default" })
                </div>
            </div>
        }
        else if (item.Status == GoalStatus.Finished)
        {
            <div class="goal finished">
                <div class="progressbarContainer">
                    <div class="progressbar">
                        <span>@item.Progress%</span>
                        <input class="progress" name="progress" type="hidden" value="@item.Progress">
                    </div>
                </div>
                <div class="infoContainer">
                    <h1>Finished: @item.Title</h1>
                    <p>@item.Info</p>
                    <p class="timeContainer">@item.StartDT -- @item.EndDT</p>
                    @if (item.Strikes != 0)
                    {
                        <p>Number of deadline extensions: @item.Strikes</p>
                    }
                    
                </div>
            </div>

        }
        else if (item.Status == GoalStatus.Canceled)
        {
            <div class="goal canceled">
                <div class="progressbarContainer">
                    <div class="progressbar">
                        <span>@item.Progress%</span>
                        <input class="progress" name="progress" type="hidden" value="@item.Progress">
                    </div>
                </div>
                <div class="infoContainer">
                    <h1>Canceled: @item.Title</h1>
                    <p>@item.Info</p>
                    <p class="timeContainer">@item.StartDT -- @item.EndDT</p>
                    @if (item.Strikes != 0)
                    {
                        <p>Number of deadline extensions: @item.Strikes</p>
                    }
                </div>
            </div>

        }
    }
    <div class="createGoal">
        <a class="btn btn-default" asp-controller="Goals" asp-action="Create">Create new goal</a>
    </div>
</div>


